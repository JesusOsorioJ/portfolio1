{
    "home": "Inicio",
    "contact": "Contacto",
    "downloadResumeEnglish": "Descargar CV EN",
    "downloadResumeSpanish": "Descargar CV ES",
    "myProjects": "Proyectos",
    "darkMode": "Modo Oscuro",
    "lightMode": "Modo Claro",
    "email": "Correo",
    "phone": "Teléfono",
    "theseAreMyContactPages": "Estas son mis páginas de contacto, en mi github podrás ver todos mis proyectos.",
    
    "profile":"Desarrollador Full Stack JavaScript con más de un año de experiencia en el desarrollo de aplicaciones web, especializado en el stack MERN (MongoDB, Express, React, Node.js). Con experiencia en la creación de interfaces frontend responsivas y la implementación de APIs RESTful en el backend. Manejo de bases de datos SQL y NoSQL, y familiaridad con metodologías ágiles (SCRUM y JIRA). Ingeniero químico con formación en lógica y programación, utilizando herramientas como Matlab, Simulink y Wolfram. ",
    "workExperience": "Experiencia",
    "description": "Descripción",
    "responsibilities": "Responsabilidades",
    "technologies": "Tecnologías",
    "company": "Empresa",
    "details": "Detalles",
    "filteredBy": "Filtrado por",
    "filter": "Filtrar",
    "importantAchievements": "Logros destacados",
    "page": "Pagina: ",
    "previous": "Anterior",
    "next": "Proxima",
    "tools": "Herramientas",
    "continue": "Continuar",
    "listPersonalProjects": "Lista de proyectos personales",
    "links": "enlaces",
    "nothingToShow": "Nada que mostrar",
  
    "disruptiveTime": "Abr 2023 – Ago 2024 (1 año y 5 meses)",
    "disruptiveResponsibilities1": " •  Desarrollo frontend de interfaces de usuario responsivas con React.js, Next.js y Vite.js, optimizando la experiencia en dispositivos móviles y escritorio.",
    "disruptiveResponsibilities2": " •  Creación y gestión de APIs RESTful en el backend con Node.js, asegurando una comunicación eficiente entre el frontend y el backend. ",
    "disruptiveResponsibilities3": " •  Manejo de bases de datos SQL (MySQL, PostgreSQL) y NoSQL (MongoDB, DynamoDB), diseñando esquemas eficientes para la gestión y almacenamiento de datos en el backend.",
  
    "disruptiveAchievements1": " •  Implementación de una plataforma E-learning y un sistema de backoffice para la gestión interna de operaciones.",
    "disruptiveAchievements2": " •  Desarrollo de una arquitectura multi-tenant para la gestión simultánea de múltiples clientes en una única plataforma.",
    "disruptiveAchievements3": " •  Integración de AWS para almacenamiento de archivos (S3), transcodificación de video (Lambda con MediaConvert) y entrega de contenido vía CloudFront. ",
    "disruptiveAchievements4": " •  Creación de documentación técnica y de endpoints mediante JSDoc y Swagger, además de la implementación de pruebas unitarias para el backend. ",
    "disruptiveAchievements5": " •  Desarrollo de estructuras avanzadas de datos, como árboles binarios y jerárquicos, para la gestión de usuarios.",
    "disruptiveAchievements6": " •  Implementación de métodos de pago con criptomonedas mediante consumo de APIs para la creación de direcciones, cancelación de pagos, pagos masivos y retiros (cashout), además de pagos en moneda fiat utilizando Stripe.",
   
    "makeRealTime": "Febrero 2022 – Mayo 2022 (3 meses).",
    "makeRealResponsibilities1": " •  Desarrollo de aplicaciones web con el stack MERN (MongoDB, Express.js, React.js, Node.js), aplicando buenas prácticas de programación y arquitecturas escalables tanto en frontend como en backend.",
    "makeRealResponsibilities2": " •  Implementación de CI/CD para automatizar despliegues y gestión de bases de datos SQL y NoSQL utilizando Mongoose y Prisma.",
    "makeRealResponsibilities3": " •  Colaboración en equipos multidisciplinarios bajo metodologías ágiles (SCRUM), utilizando herramientas como JIRA para la planificación, revisión de código y optimización de funcionalidades.",
  
    "makeRealAchievements1": " •  Quick Call: Proyecto grupal de 3 meses. Desarrollo de una página web para conectar a profesionalesespecializados con usuarios. Tecnologías: React.js, MongoDB, Redux, Express.js, SCRUM, JIRA.",
    "makeRealAchievements2": " •  Mi App: Proyecto individual de 2 semanas. Creación de una plataforma web que permite a profesores y estudiantes diseñar y gestionar pruebas en línea. Tecnologías: React.js, Firebase, Firebase Authentication.",
    
    "academicTraining": "Formación académica",
    "makeItRealDescription": "Bootcamp intensivo centrado en el desarrollo de aplicaciones web usando el stack MERN (MongoDB, Express.js, React.js, Node.js) y otras herramientas como GraphQL, React Native y Docker. El programa abarca desde el diseño de APIs RESTful hasta la creación de frontends responsivos e integración con bases de datos, con un enfoque en buenas prácticas, rendimiento y despliegue en la nube.",
    "misionTICDescription": "Programa organizado por el Ministerio de las TIC de Colombia, diseñado para capacitar a estudiantes en habilidades de programación y desarrollo web. El curso cubre desde los fundamentos de la programación hasta el desarrollo completo de aplicaciones web utilizando herramientas como Python, Java, HTML, Flask, y GitHub, con un enfoque en la implementación de metodologías ágiles y trabajo colaborativo.",
    "chemicalEngineer": "Ingeniero químico",
    "researchGroup": "Grupo de Investigación: Diseño de procesos y aprovechamiento de biomasas IDAB.",
    "languages": "Idiomas",
    "intermediateLevel": "Nivel intermedio",
  
    "developer" : "Desarrollador",
    "participants": "Participantes",
    "characteristics" : "Características",
    "webPage": "Página Web",
    "expand":"Expandir",
    "makeItRealTime": "Feb 2022 – May 2022 (3 meses)",
    "misionTICTime": "May 2021 – Dic 2021 (8 meses)",
    "universityTime": "Feb 2012 – Ago 2018 (5 años)",
  
    "quickcallDescription" : "Proyecto en Reactjs (Front) y Nodejs (Back) para exponer servicios de profesionales especializados en todo tipo de labores como labores domesticas, eléctrica, plomería, mecánica, entre otras. Los clientes podrán conectar con el profesional idóneo según sus necesidades, a través de una interfaz amigable con el usuario",
    "quickcallCharacteristics1" : "Inicio de sesión con encriptación (Jwt)",
    "quickcallCharacteristics2" : "Filtro de profesional por categorías",
    "quickcallCharacteristics3" : "Envío de correo de autenticación de usuario",
    "quickcallCharacteristics4" : "Envío de imágenes con Cloudinary",
    "quickcallCharacteristics5" : "Pasarela de pago (stripe)",
    "quickcallCharacteristics6" : "Testing unitario y funcional (cypress, jest)",
    "quickcallCharacteristics7" : "Uso de herramientas SCRUM (Jira) y Figma",
    "quickcallImages1" : "Home de página",
    "quickcallImages2" : "Formato de consulta de cliente",
    "quickcallImages3" : "Gestión de trabajos",
    "quickcallImages4" : "Chat en vivo con clientes",
    "quickcallImages5" : "Pasarela de pago Strike",
    "quickcallImages6" : "Autenticación de usuarios",
      
    "miappDescription" : "Proyecto realizado en firebase (FB authentication , FB Realtime Database) para creación y gestión de cursos y exámenes en línea. Esta página ofrece a los estudiantes y profesores herramientas para poder hacer test en línea y test de forma simultánea.",
    "miappCharacteristics1" : "Inicio de sesión con encriptación (Jwt)",
    "miappCharacteristics2" : "Creación y gestión de test en línea",
    "miappCharacteristics3" : "Creación y gestión de curso en línea",
    "miappCharacteristics4" : "Posibilidad de gestionar test en vivo o con tiempo",
    "miappCharacteristics5" : "Uso de herramientas SCRUM (Jira) y Figma",
    "miappImages1" : "Creación de cuestionarios",
    "miappImages2" : "Registro y autenticación de usuario",
    "miappImages3" : "Gestión de estudiantes por curso",
    "miappImages4" : "Manejo de test en línea",
    "miappImages5" : "Gestión de curso",
    "miappImages6" : "Pago suscripción",
  
    "makerhubDescription" : "Proyecto en Vite.js (Front) y Node.js (Back) para la gestión de las solicitudes de empleo de los estudiantes de Make It Real (Bootcamp, Medellín, Colombia)",
    "makerhubResponsibilities1" : "Creación de frontend vista (Admin, Admindetails y Home)",
    "makerhubResponsibilities2" : "Creación de componentes y subvistas (Login, Delete, Create and Update modal)",
    "makerhubResponsibilities3" : "Implementación de TypeScript (Interface, Type e InitialValue)",
    "makerhubResponsibilities4" : "Creación de servicios, application log, application y user",
    "makerhubResponsibilities5" : "Implementación de Prisma y conexión DB (Backend)",
    "makerhubResponsibilities6" : "Configuración para migración y seeding inicial para modo de desarrollo (Librería faker)",
    "makerhubResponsibilities7" : "Creacióne endpoint y funciones para uso de Prisma con conexión PostgreSQL",
    "makerhubCharacteristics1" : "Login de usuarios (MAKER, ADMIN)",
    "makerhubCharacteristics2" : "Gestión de aplicaciones por parte de maker (CRUD)",
    "makerhubCharacteristics3" : "Filtros administrador queryParams por status, name, email, cohort",
    "makerhubCharacteristics4" : "Gestión de maker por parte del administrador (CRUD)",
    "makerhubCharacteristics5" : "Implementación de prisma",
    "makerhubImages1" : "Login (maker, administrador)",
    "makerhubImages2" : "Vista maker: Aplicaciones por maker y status",
    "makerhubImages3" : "Modal para creación de aplicación",
    "makerhubImages4" : "Modal para ver y modificar aplicación",
    "makerhubImages5" : "Vista administración: Detalle maker por ID",
    "makerhubImages6" : "Formulario para actualizar maker",
    "makerhubImages7" : "Vista administración: Gestión de maker",
    "makerhubImages8" : "Modal eliminar maker o aplicación",
  
    "archibigeDescription" : "Proyecto realizado en Angular.js para la creación de página de empresa consultora de archivos, bibliotecas y centro de documentación, orientada a brindar capacitaciones y asesorías",
    "archibigeCharacteristics1" : "Landing page con carrusel",
    "archibigeCharacteristics2" : "Información general de la empresa",
    "archibigeCharacteristics3" : "Vista de opiniones del cliente carrusel",
    "archibigeCharacteristics4" : "Ubicación Google Maps",
    "archibigeCharacteristics5" : "Animaciones: Scrolltrigger y Gsap",
    "archibigeImages1" : "Home de página",
    "archibigeImages2" : "Descripción de empresa",
    "archibigeImages3" : "Servicios prestados",
    "archibigeImages4" : "Opiniones de cliente en carrusel",
    "archibigeImages5" : "Ubicación con google maps",
  
    "testenglishDescription" : "Proyecto de frontend/backend realizado en Nextjs para la creación de página para evaluar vocabulario en inglés con palabras de diferentes categorías",
    "testenglishCharacteristics1" : "Login y signup de usuarios",
    "testenglishCharacteristics2" : "Filtro de palabras por tipo y nota realizada",
    "testenglishCharacteristics3" : "Cuadro de evaluación de usuario por palabra",
    "testenglishCharacteristics4" : "Migration/seeding de base de datos (prisma)",
    "testenglishCharacteristics5" : "Uso de router.query para filtros",
    "testenglishImages1" : "Home de página",
    "testenglishImages2" : "Login y signup de usuario",
    "testenglishImages3" : "Vista login de usuario",
    "testenglishImages4" : "Cuadro de evaluación de palabras",
    "testenglishImages5" : "Filtro de lista por notas y tipo de palabra",
  
    "megatvDescription" : "Proyecto en React.js (Front) y Node.js (Back) para página con login y registro y crud de elementos de series de TV",
    "megatvCharacteristics1" : "Envío formulario por parte de clientes",
    "megatvCharacteristics2" : "Carga de direcciones de base de datos en formulario cliente",
    "megatvCharacteristics3" : "Cuadro de evaluación de usuario por palabra",
    "megatvCharacteristics4" : "Envío de correo de autenticación de usuario",
    "megatvCharacteristics5" : "Diseño amigable y moderno con usuario",
    "megatvImages1" : "Home de página",
    "megatvImages2" : "Formulario de envío de correo y teléfono",
    "megatvImages3" : "Planes de TV disponibles",
    "megatvImages4" : "Direcciones disponibles en DB",
    
    "graphqlDescription" : "Proyecto backend GraphQl para crear y consumir información de bases de datos en mongoDB. Para gestionar el inicio de sesión de los usuarios y la información general del usuario como teléfono, correo electrónico, documento de identidad, entre otros.",
    "graphqlCharacteristics1" : "QUERIES",
    "graphqlCharacteristics2" : "AllUser: búsqueda total de usuarios o por Name, LastName, IsMilitar",
    "graphqlCharacteristics3" : "Búsqueda obligatoria por userID: UserDocumentByUser, ContactInfoByUser, allUserDocument",
    "graphqlCharacteristics4" : "MUTATIONS",
    "graphqlCharacteristics5" : "Creación usuario: createUser",
    "graphqlCharacteristics6" : "Login un usuario: LoginUser",
    "graphqlCharacteristics7" : "Modifica datos de usuario: UpdateUser",
    "graphqlImages1" : "Creación de usuario, otorgación de token",
    "graphqlImages2" : "Todas las queries and mutations",
    "graphqlImages3" : "Creación de document, ingreso de token",
    "graphqlImages4" : "Creación de document by username",
    "graphqlImages5" : "Query allname, with email of user by return",
    "graphqlImages6" : "Todas las mutaciones del programa",
    
    "dreadfulDescription" : "Proyecto en Angular.js con página de login y registro para la gestión y el consumo de servicios de API de terceros (Platzi) y filtro por nombre de productos",
    "dreadfulCharacteristics1" : "Consumo de información de API",
    "dreadfulCharacteristics2" : "Página Platzi(https://api.escuelajs.co/api/v1/products)",
    "dreadfulCharacteristics3" : "Paginación de los productos en listas por 8",
    "dreadfulCharacteristics4" : "Filtro de productos por nombre",
    "dreadfulImages1" : "Paginación de productos por 8 ítems",
    "dreadfulImages2" : "Página para filtro de páginas",
    "dreadfulImages3" : "Landing page, link para películas y series",
    "dreadfulImages4" : "Filtro de productos por productos",
    "dreadfulImages5" : "Consulta allname, con email del usuario por retorno",
    "dreadfulImages6" : "Todas las mutaciones del programa",
    
    "crudnextDescription" : "Proyecto de frontend/backend realizado en Nextjs para creación de API CRUD con campos como proyectos, descripción, precio, fecha de creación",
    "crudnextCharacteristics1" : "Consumo de API para eliminar, crear y modificar",
    "crudnextCharacteristics2" : "Backend para consumo de información de frontend",
    "crudnextCharacteristics3" : "Estilos con tailwind",
    "crudnextImages1" : "Lista de productos creados",
    "crudnextImages2" : "Menú para agregar nuevo producto",
    "crudnextImages3" : "Menú para modificar producto",
    
    "igmDescription" : "Proyecto Vue.js (Front) y Laravel (Back) para creación de página con login, registro y crud de notas con campo título, descripción, etiqueta y fecha de vencimiento",
    "igmCharacteristics1" : "Login y creación de usuario",
    "igmCharacteristics2" : "Crud de notas por usuario logueado",
    "igmCharacteristics3" : "Testing de endpoint por PhpUnit",
    "igmCharacteristics4": "Internalización y modo oscuro/claro",
    "igmImages1" : "Login y creación de usuario",
    "igmImages2" : "Crud de notas por usuario logueado",
    "igmImages3" : "Creación de nota por usuario",
    
    "quickbetDescription" : "Proyecto en Next Js (Front) y Nestjs (Back) con login y registro para consumo de api themoviedb para la gestión de películas favoritas por usuario logueado",
    "quickbetCharacteristics1" : "Login y creación de usuario",
    "quickbetCharacteristics2" : "Marcar y desmarcar películas por favoritas",
    "quickbetCharacteristics3" : "Filtros por nombre y género",
    "QuickbetCharacteristics4": "Internalización y modo oscuro/claro",
    "quickbetCharacteristics5" : "Consumo de api de https://developer.themoviedb.org/docs/getting-started ",
    "quickbetImages1" : "Login y creación de usuario",
    "quickbetImages2": "Página principal para gestión de favoritos",
    "quickbetImages3" : "Ver detalle de películas",
    
    "laravelappDescription" : "Proyecto en Laravel (Back) para crud de cuentas de usuario y pedidos",
    "laravelappCharacteristics1" : "Crud de cuentas de usuario y pedidos",
    "laravelappCharacteristics2": "Eliminación en cascada de pedidos por usuario eliminado",
    "laravelappCharacteristics3" : "Testing de edpoint por PhpUnit",
    "laravelappCharacteristics4": "Documentación con Swagger y envío notificación en servidor de node por socket",
    "laravelappImages1" : "Crud de cuentas de usuario",
    "laravelappImages2" : "Crud de pedidos",
  
    "nexttasksystemDescription": "Aplicación diseñada para gestionar tareas internas, facilitando la organización del trabajo y el seguimiento del progreso de las tareas asignadas. Los administradores pueden asignar y gestionar tareas, mientras que los empleados pueden visualizar y actualizar el estado de su trabajo asignado.",
    "nexttasksystemCharacteristics1": "Registro, inicio de sesión y autenticación de usuarios.",
    "nexttasksystemCharacteristics2": "Creación, actualización y eliminación de tareas.",
    "nexttasksystemCharacteristics3": "Uso de WebSockets para sincronización en tiempo real.",
    "nexttasksystemCharacteristics4": "Validaciones en el backend usando express-validator.",
    "nexttasksystemCharacteristics5": "Manejo de contraseñas con bcrypt y autenticación con JWT.",
    "nexttasksystemImages1": "CRUD de tareas (frontend).",
    "nexttasksystemImages2": "Login y registro de cuentas de usuario.",
    "nexttasksystemImages3": "CRUD de tareas (REST client).",
    "nexttasksystemImages4": "CRUD de usuarios (REST client).",
    "nexttasksystemImages5": "Tests con Jest.",
  
    "evalartDescription": "Este proyecto es una API que permite gestionar franquicias y sus sucursales utilizando MongoDB como base de datos y Spring Boot como framework backend. Se incluyen operaciones CRUD (Crear, Leer, Actualizar, Eliminar) para manejar franquicias y sucursales asociadas.",
    "evalartCharacteristics1": "Gestión de franquicias.",
    "evalartCharacteristics2": "Operaciones CRUD para sucursales asociadas a una franquicia.",
    "evalartCharacteristics3": "Persistencia de datos con MongoDB.",
    "evalartCharacteristics4": "Arquitectura RESTful para las operaciones.",
    "evalartImages1": "Ejecución del proyecto con mvn spring-boot:run (terminal).",
    "evalartImages2": "Consumo de endpoint con REST client (CRUD sucursales).",
  
    "runaDescription": "Aplicación que permite recibir y procesar transacciones en criptomonedas de manera segura.",
    "runaCharacteristics1": "Verificación de transacciones en criptomonedas.",
    "runaCharacteristics2": "Validaciones para evitar transacciones duplicadas y conflictos de billetera.",
    "runaCharacteristics3": "Arquitectura basada en Docker para facilitar el despliegue y administración.",
    "runaCharacteristics4": "Maquetación en Vite + React + Tailwind.",
    "runaImages1": "Creación de contenedor en Docker y ejecución de app.js (terminal).",
    "runaImages2": "Creación de contenedor en Docker y ejecución de app.js (Docker).",
    "runaImages3": "Maquetación en Vite + React + Tailwind.",
  
    "pocketDescription": "Este proyecto es una aplicación de chat interactiva desarrollada con React, TypeScript y Socket.IO. Proporciona un chat entre usuarios y un bot, con integración a un backend construido en Node.js y Express.",
    "pocketCharacteristics1": "Consumo de API de chatbot (IA) para responder a usuarios.",
    "pocketCharacteristics2": "Manejo de internacionalización y temas claro/oscuro.",
    "pocketCharacteristics3": "Uso de WebSockets para sincronización en tiempo real.",
    "pocketImages1": "Chat interactivo del chatbot (IA).",
    "pocketImages2": "Eliminar chat.",
    "pocketImages3": "Manejo de internacionalización y temas claro/oscuro."
  }