{
  "home": "Home",
  "contact": "Contact",
  "downloadResumeEnglish": "Download CV EN",
  "downloadResumeSpanish": "Download CV ES",
  "myProjects": "Projects",
  "darkMode": "Dark Mode",
  "lightMode": "Light Mode",
  "email": "Email",
  "phone": "Phone",
  "theseAreMyContactPages": "These are my contact pages, in my github you can see all my projects.",

  "profile": "Full Stack JavaScript Developer with more than a year of experience in web application development, specialized in the MERN stack (MongoDB, Express, React, Node.js). Experienced in creating responsive frontend interfaces and implementing RESTful APIs on the backend. SQL and NoSQL database management, and familiarity with agile methodologies (SCRUM and JIRA). Chemical engineer with a background in logic and programming, using tools such as Matlab, Simulink and Wolfram.",
  "workExperience": "Experience",
  "description": "Description",
  "responsibilities": "responsibilities",
  "technologies": "Technologies",
  "company": "Company",
  "details": "Details",
  "filteredBy": "Filtered by",
  "filter": "Filter",
  "importantachievements": "Important achievements",
  "page": "Page: ",
  "previous": "Previous",
  "next": "Next",
  "tools": "Tools",
  "continue": "Continue",
  "listPersonalProjects": "List of personal projects",
  "links": "links",
  "nothingToShow": "Nothing to show",

  "academicTraining": "Academic training",
  "languages": "Languages",
  "intermediateLevel": "Intermediate level",

  "developer": "Developer",
  "participants": "Participants",
  "characteristics": "characteristics",
  "webPage": "Web page",
  "expand": "Expand",
  "coursesCertifications": "Courses and certifications",

  "experience": {
    "0": {
      "name": "• Disruptive Studio, Guadalajara, Mexico",
      "position": "Full stack developer",
      "time": "April 2023 – August 2024 (1 year y 5 months)",
      "responsibilities1": " •  Frontend development of responsive user interfaces with React.js, Next.js and Vite.js, optimizing the experience on mobile and desktop devices.",
      "responsibilities2": " •  Creation and management of RESTful APIs in the backend with Node.js, ensuring efficient communication between frontend and backend.",
      "responsibilities3": " •  SQL (MySQL, PostgreSQL) and NoSQL (MongoDB, DynamoDB) database management, designing efficient schemas for backend data management and storage.",
      "achievements1": " •  Implementation of an E-learning platform and a backoffice system for internal operations management.",
      "achievements2": " •  Development of a multi-tenant architecture for the simultaneous management of multiple clients on a single platform.",
      "achievements3": " •  Integración de AWS para almacenamiento de archivos (S3), transcodificación de video (Lambda con MediaConvert) y entrega de contenido vía CloudFront.",
      "achievements4": " •  Creation of technical and endpoint documentation using JSDoc and Swagger, as well as implementation of unit tests for the backend.",
      "achievements5": " •  Development of advanced data structures, such as binary and hierarchical trees, for user management.",
      "achievements6": " •  Implementation of cryptocurrency payment methods by consuming APIs for address creation, payment cancellation, mass payments and cashouts, as well as fiat currency payments using Stripe.",
      "technologies": "JavaScript, Typescript, Node.js, Next.js, Vite, AWS, Prisma, PostgreSQL, Docker, Socket.io, MongoDB (Mongoose), JSDoc, React Hook Form"
    },
    "1": {
      "name": "• Make it real (Bootcamp)",
      "position": "Web developer",
      "time": "February 2022 – May 2022 (3 months).",
      "responsibilities1": " •  Web application development using the MERN stack (MongoDB, Express.js, React.js, Node.js), applying best programming practices and scalable architectures in both frontend and backend.",
      "responsibilities2": " •  CI/CD implementation to automate deployments and database management for both SQL and NoSQL using Mongoose and Prisma.",
      "responsibilities3": " •  Collaboration in multidisciplinary teams under agile methodologies (SCRUM), using tools like JIRA for planning, code review, and feature optimization.",
      "achievements1": " •  Quick Call: 3-month group project. Development of a website to connect specialized professionals with users. Technologies: React.js, MongoDB, Redux, Express.js, SCRUM, JIRA.",
      "achievements2": " •  Mi App: 2-week individual project. Creation of a web platform that allows teachers and students to design and manage online tests. Technologies: React.js, Firebase, Firebase Authentication.",
      "technologies": "JavaScript, Typescript, React.js, Node.js, Express, Docker, MongoDB (Mongoose)"
    }
  },

  "academy": {
    "0": {
      "university": "Make it real, Medellín, Colombia",
      "title": "• Full Stack JavaScript",
      "time": "February 2022 – May 2022 (3 months).",
      "description": "Intensive bootcamp focused on web application development using the MERN stack (MongoDB, Express.js, React.js, Node.js) and other tools such as GraphQL, React Native and Docker. The program covers from designing RESTful APIs to creating responsive frontends and database integration, with a focus on best practices, performance and cloud deployment."
    },
    "1": {
      "university": "MisionTIC 2022, Universidad del norte, Barranquilla, Colombia.",
      "title": "• Web developer",
      "time": "May 2021 – December 2021 (8 months)",
      "description": "Program organized by the Colombian Ministry of ICT, designed to train students in programming and web development skills. The course covers from the fundamentals of programming to the complete development of web applications using tools such as Python, Java, HTML, Flask, and GitHub, with a focus on the implementation of agile methodologies and collaborative work."
    },
    "2": {
      "university": "Universidad de Cartagena, Cartagena, Colombia",
      "title": "• Chemical engineer",
      "time": "February 2012 – August 2018 (5 years)",
      "description": "Research Group: Process design and use of biomass. IDAB."
    }
  },

  "courses": {
    "0": {
      "university": "AvanzaTEC with Cisco",
      "title": "• Path 1: Cybersecurity",
      "time": "January 2025 – March 2022 (106 hours)",
      "description": "This program covers everything from basic concepts to advanced cybersecurity techniques, including an introduction to cybersecurity, network defense, endpoint security, and cyber threat management. This course provides fundamental skills to face challenges in the field of information security."
    },
    "1": {
      "university": "TalentoTech with University of Antioquia",
      "title": "• Cloud Architecture - Explorer Level",
      "time": "November 2024 – February 2025 (159 hours)",
      "description": "This bootcamp introduces the essential principles and techniques for designing cloud architectures, covering basic concepts of cloud computing, types of clouds and environments, PaaS services and web application deployment, as well as architectural design and cloud security. This course strengthens understanding and practical skills in cloud-based solutions."
    }
  },

  "projects": {
    "quickcall": {
      "description": "Project in Reactjs (Front) and Nodejs (Back) to expose services of professionals specialized in all types of tasks such as domestic work, electrical, plumbing, mechanics, among others. Clients will be able to connect with an ideal professional according to their needs, through a user-friendly interface.",
      "characteristics1": "Login with encryption (Jwt)",
      "characteristics2": "Professional filter by categories",
      "characteristics3": "Sending user authentication email",
      "characteristics4": "Sending images with Cloudinary",
      "characteristics5": "Payment gateway (stripe)",
      "characteristics6": "Unit and functional testing (cypress, jest)",
      "characteristics7": "Using SCRUM tools (Jira) and Figma",
      "images1": "Home page",
      "images2": "Customer query form",
      "images3": "Job management",
      "images4": "Live chat with customers",
      "images5": "Strike payment gateway",
      "images6": "User authentication"
    },
    "miapp": {
      "description": "Project carried out in Firebase (FB authentication, FB Realtime Database) for the creation and management of online courses and exams. This page offers students and teachers tools to be able to take online tests and tests simultaneously.",
      "characteristics1": "Login with encryption (Jwt)",
      "characteristics2": "Creation and management of online tests",
      "characteristics3": "Creation and management of online courses",
      "characteristics4": "Possibility of managing live or timed tests",
      "characteristics5": "Use of SCRUM tools (Jira) and Figma",
      "images1": "Creation of questionnaires",
      "images2": "Registration and user authentication",
      "images3": "Management of students by course",
      "images4": "Management of online tests",
      "images5": "Course management",
      "images6": "Subscription payment"
    },
    "makerhub": {
      "description": "Project in Vite.js (Front) and Node.js (Back) for the management of job applications for Make It Real students (Bootcamp, medellin, Colombia)",
      "responsibilities1": "Creation of frontend view (Admin, Admindetails and Home)",
      "responsibilities2": "Creation of components and sub views (Login, Delete, Create and Update modal)",
      "responsibilities3": "Implementation of TypeScript (Interface, Type and InitialValue)",
      "responsibilities4": "Creation of services, applicationlog, application and user",
      "responsibilities5": "Implementation of Prisma and DB connection (Backend)",
      "responsibilities6": "Configuration for migration and initial seeding (faker library)",
      "characteristics1": "User login (MAKER, ADMIN)",
      "characteristics2": "Maker application management (CRUD)",
      "characteristics3": "Administrator queryParams filters by status, name, email, cohort",
      "characteristics4": "Maker management by administrator (CRUD)",
      "characteristics5": "Prisma implementation",
      "images1": "Login (maker, administrator)",
      "images2": "Maker view: Applications by maker and status",
      "images3": "Modal for creating application",
      "images4": "Modal for viewing and modifying application",
      "images5": "Administration view: Maker detail by ID",
      "images6": "Form to update maker",
      "images7": "Administration view: Maker management",
      "images8": "Modal to delete maker or application"
    },
    "archibige": {
      "description": "Project in Angular.js for the creation of a file consulting company page, libraries and documentation center, aimed at providing training and advice.",
      "characteristics1": "Landing page with carousel",
      "characteristics2": "General information about the company",
      "characteristics3": "Customer opinions carousel view",
      "characteristics4": "Google maps location",
      "characteristics5": "Animations and scrolltrigger gsap",
      "images1": "Home page",
      "images2": "Company description",
      "images3": "Services provided",
      "images4": "Customer reviews in carousel",
      "images5": "Location with google maps"
    },
    "testenglish": {
      "description": "Frontend/backend project made in Nextjs for the generation of a page to evaluate English vocabulary with words from different categories.",
      "characteristics1": "User login and signup",
      "characteristics2": "Filter words by type and grade made",
      "characteristics3": "User evaluation table by word",
      "characteristics4": "Database migration/seeding (prisma)",
      "characteristics5": "Using router.query for filters",
      "images1": "Home page",
      "images2": "User login and signup",
      "images3": "User login view",
      "images4": "Word evaluation table",
      "images5": "List filter by grades and type of word"
    },
    "megatv": {
      "description": "Project in React.js (Front) and Node.js (Back) for page with login and registration and crud of TV series elements",
      "characteristics1": "Form submission by clients",
      "characteristics2": "Upload of database addresses in client form",
      "characteristics3": "User evaluation table by word",
      "characteristics4": "User authentication email submission",
      "characteristics5": "User friendly and modern design",
      "images1": "Home page",
      "images2": "Email and phone submission form",
      "images3": "Available TV plans",
      "images4": "Available addresses in DB"
    },
    "graphql": {
      "description": "Backend with  usage for creating and consuming database information in mongoDB",
      "characteristics1": "QUERIES",
      "characteristics2": "AllUser: total search of users or by Name, LastName, IsMilitar",
      "characteristics3": "Mandatory search by userID: UserDocumentByUser, ContactInfoByUser, allUserDocument",
      "characteristics4": "MUTATIONS",
      "characteristics5": "User creation: createUser",
      "characteristics6": "Login a user: LoginUser",
      "characteristics7": "Modify data of user: UpdateUser",
      "images1": "Create user, grant token",
      "images2": "All queries and mutations",
      "images3": "Create document, enter token",
      "images4": "Create document by username",
      "images5": "Query allname, with email of user by return",
      "images6": "All mutations of the program"
    },
    "dreadful": {
      "description": "Project in Angular.js with login and registration page for the management and consumption of third-party API services (Platzi) and filter by product name",
      "characteristics1": "Consumption of API information",
      "characteristics2": "Platzi page (https://api.escuelajs.co/api/v1/products)",
      "characteristics3": "Product pagination in lists by 8",
      "characteristics4": "Product filter by name",
      "images1": "Product pagination by 8 items",
      "images2": "Page for page filter",
      "images3": "Landing page, link for movies and series",
      "images4": "Product filter by products",
      "images5": "Query allname, with email of user by return",
      "images6": "All mutations of the program"
    },
    "crudnext": {
      "description": "Frontend/backend project made in Nextjs for creation of CRUD API with fields such as projects, description, price, creation date",
      "characteristics1": "API consumption for deleting, creating and modifying",
      "characteristics2": "Backend for frontend information consumption",
      "characteristics3": "Styles with tailwind",
      "images1": "List of created products",
      "images2": "Menu for adding new product",
      "images3": "Menu for modify product"
    },
    "igm": {
      "description": "Vue.js (Front) and Laravel (Back) project for page creation with login, registration and notes crud with title, description, label and expiration date field",
      "characteristics1": "Login and user creation",
      "characteristics2": "Notes crud per logged in user",
      "characteristics3": "Endpoint testing by PhpUnit",
      "characteristics4": "Internalization and dark/light mode",
      "images1": "Login and user creation",
      "images2": "Notes crud per logged in user",
      "images3": "Note creation per user"
    },
    "quickbet": {
      "description": "Next Js (Front) and Nestjs (Back) project with login and registration for consumption of themoviedb api for management of favorite movies by logged in user",
      "characteristics1": "Login and user creation",
      "characteristics2": "Mark and unmark movies as favorites",
      "characteristics3": "Filters by name and genre",
      "characteristics4": "Internalization and dark/light mode",
      "characteristics5": "Api consumption from https://developer.themoviedb.org/docs/getting-started ",
      "images1": "Login and user creation",
      "images2": "Main page for favorites management",
      "images3": "View movie details"
    },
    "laravelapp": {
      "description": "Laravel (Back) project for user account crud and orders",
      "characteristics1": "Crud of user accounts and orders",
      "characteristics2": "Cascading deletion of orders by deleted user",
      "characteristics3": "Edpoint testing by PhpUnit",
      "characteristics4": "Documentation with Swagger and sending notification on node server by socket",
      "images1": "Crud of user accounts",
      "images2": "Crud of orders"
    },
    "nexttasksystem": {
      "description": "Application designed to manage internal tasks, facilitating work organization and tracking the progress of assigned tasks. Administrators can assign and manage tasks, while employees can view and update the status of their assigned work.",
      "characteristics1": "User registration, login, and authentication.",
      "characteristics2": "Task creation, updating, and deletion.",
      "characteristics3": "Real-time synchronization using WebSockets.",
      "characteristics4": "Backend validations using express-validator.",
      "characteristics5": "Password handling with bcrypt and authentication with JWT.",
      "images1": "Task CRUD (frontend).",
      "images2": "User account login and registration.",
      "images3": "Task CRUD (REST client).",
      "images4": "User CRUD (REST client).",
      "images5": "Tests with Jest."
    },
    "evalart": {
      "description": "This project is an API that manages franchises and their branches using MongoDB as the database and Spring Boot as the backend framework. It includes CRUD operations (Create, Read, Update, Delete) for handling franchises and their associated branches.",
      "characteristics1": "Franchise management.",
      "characteristics2": "CRUD operations for branches associated with a franchise.",
      "characteristics3": "Data persistence with MongoDB.",
      "characteristics4": "RESTful architecture for operations.",
      "images1": "Project execution with mvn spring-boot:run (terminal).",
      "images2": "Endpoint consumption with REST client (branch CRUD)."
    },
    "runa": {
      "description": "Application that securely receives and processes cryptocurrency transactions.",
      "characteristics1": "Verification of cryptocurrency transactions.",
      "characteristics2": "Validations to prevent duplicate transactions and wallet conflicts.",
      "characteristics3": "Docker-based architecture for easier deployment and management.",
      "characteristics4": "Layout built with Vite + React + Tailwind.",
      "images1": "Docker container creation and app.js execution (terminal).",
      "images2": "Docker container creation and app.js execution (Docker).",
      "images3": "Layout with Vite + React + Tailwind."
    },
    "pocket": {
      "description": "This project is an interactive chat application developed with React, TypeScript, and Socket.IO. It provides chat functionality between users and a bot, integrated with a backend built with Node.js and Express.",
      "characteristics1": "Chatbot API (AI) consumption for user responses.",
      "characteristics2": "Handling of internationalization and light/dark themes.",
      "characteristics3": "Real-time synchronization using WebSockets.",
      "images1": "Interactive chatbot (AI) chat.",
      "images2": "Delete chat.",
      "images3": "Internationalization handling and light/dark themes."
    },
    "portfolio": {
      "description": "Application to showcase portfolio, academic studies, and personal projects. First version.",
      "characteristics1": "General information view.",
      "characteristics2": "Experience and studies view.",
      "characteristics3": "Project detail view, carousel implementation.",
      "images1": "Landing page.",
      "images2": "Image of created projects view.",
      "images3": "Project detail view, tools, and features.",
      "images4": "Dark/light theme and internationalization.",
      "images5": "Responsive design."
    },
    "mgpanel": {
      "description": "Web page layout.",
      "characteristics1": "General information view.",
      "characteristics2": "Theme configuration and internationalization.",
      "images1": "Landing page.",
      "images2": "Image of created projects view (swiper).",
      "images3": "Dark/light theme, internationalization, and responsive design."
    }
  }
}
